#include <stdio.h>

int main()
{
    int n,arr[n],min,max;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d",&arr[i]);
    }
    max=min=arr[0];
    for(int i=0;i<n;i++){
        if(arr[i]>max){
            max=arr[i];
        }
        else if(arr[i]<min){
            min=arr[i];
        }
    }
    printf("MAX: %d\nMIN: %d",max,min);
    

    return 0;
}


###RECURSIVE SOLUTION ######
#include <bits/stdc++.h>
using namespace std;
 
int getMin(int arr[], int n)
{
    // If there is single element, return it.
    // Else return minimum of first element and
    // minimum of remaining array.
    return (n == 1) ? arr[0] : min(arr[0],
                         getMin(arr + 1, n - 1));
}
 
int getMax(int arr[], int n)
{
    // If there is single element, return it.
    // Else return maximum of first element and
    // maximum of remaining array.
    return (n == 1) ? arr[0] : max(arr[0],
                          getMax(arr + 1, n - 1));
}
 
int main()
{
    int arr[] = { 12, 1234, 45, 67, 1 };
    int n = sizeof(arr) / sizeof(arr[0]);
    cout << "Minimum element of array: " <<
                            getMin(arr, n) << "\n";
    cout << "Maximum element of array: " <<
                                   getMax(arr, n);
    return 0;
}


####	library functions - min_element() & max_element() ####

#include <bits/stdc++.h>
using namespace std;
 
int getMin(int arr[], int n)
{
    return *min_element(arr, arr + n);
}
 
int getMax(int arr[], int n)
{
    return *max_element(arr, arr + n);
}
 
int main()
{
    int arr[] = { 12, 1234, 45, 67, 1 };
    int n = sizeof(arr) / sizeof(arr[0]);
    cout << "Minimum element of array: " << getMin(arr, n) << "\n";
    cout << "Maximum element of array: " << getMax(arr, n);
    return 0;
}